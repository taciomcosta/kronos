package cli

import (
	"github.com/spf13/cobra"
	"github.com/taciomcosta/kronos/internal/entities"
	uc "github.com/taciomcosta/kronos/internal/usecases"
)

var createCmd = &cobra.Command{
	Use:   "create [job | notifier]",
	Short: "Creates a new job/notifier",
}

var createJobCmd = &cobra.Command{
	Use:   "job",
	Short: "Creates a new job",
	Run: func(cmd *cobra.Command, args []string) {
		createJobRequest := uc.CreateJobRequest{
			Name:    flags.Name,
			Command: flags.Command,
			Tick:    flags.Tick,
		}
		createJobResponse := &uc.CreateJobResponse{}
		err := client.post("/jobs", createJobRequest, createJobResponse)
		out.error(err)
		out.println(createJobResponse.Msg)
	},
}

var createNotifierCmd = &cobra.Command{
	Use:   "notifier [slack | email]",
	Short: "Creates a new notifier",
}

var createNotifierSlackCmd = &cobra.Command{
	Use:   "slack",
	Short: "Creates a new slack notifier",
	Run: func(cmd *cobra.Command, args []string) {
		request := uc.CreateNotifierRequest{
			Name: flags.Name,
			Type: entities.SlackNotifierType,
			Metadata: map[string]string{
				"auth_token":  flags.AuthToken,
				"channel_ids": flags.ChannelIds,
			},
		}
		response := &uc.CreateNotifierResponse{}
		err := client.post("/notifiers", request, response)
		out.error(err)
		out.println(response.Msg)
	},
}

func init() {
	initCreateJobCmd()
	initCreateNotifierCmd()
	initCreateCmd()
}

func initCreateJobCmd() {
	createJobCmd.Flags().StringVarP(&flags.Name, "name", "n", "", "Unique job name")
	createJobCmd.Flags().StringVarP(&flags.Command, "cmd", "c", "", "Job entrypoint")
	createJobCmd.Flags().StringVarP(
		&flags.Tick,
		"tick", "t", "",
		"Cron expression or sugar expression:\n"+getTickExamplesTables(),
	)
	_ = createJobCmd.MarkFlagRequired("name")
	_ = createJobCmd.MarkFlagRequired("cmd")
	_ = createJobCmd.MarkFlagRequired("tick")
}

func initCreateNotifierCmd() {
	createNotifierSlackCmd.Flags().StringVarP(&flags.Name, "name", "n", "", "Unique notifier name")
	createNotifierSlackCmd.Flags().StringVarP(&flags.AuthToken, "auth-token", "", "", "Auth Token generated by Slack")
	createNotifierSlackCmd.Flags().StringVarP(&flags.ChannelIds, "channel-ids", "", "", "Comma separated list of channel ids")
	_ = createNotifierSlackCmd.MarkFlagRequired("name")
	_ = createNotifierSlackCmd.MarkFlagRequired("auth-token")
	_ = createNotifierSlackCmd.MarkFlagRequired("channel-ids")

	createNotifierCmd.AddCommand(createNotifierSlackCmd)
}

func initCreateCmd() {
	createCmd.AddCommand(createJobCmd)
	createCmd.AddCommand(createNotifierCmd)
}
